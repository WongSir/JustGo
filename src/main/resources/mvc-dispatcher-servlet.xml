<beans xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context.xsd
      http://www.springframework.org/schema/mvc
      http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
      http://www.springframework.org/schema/aop
      http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.json.GsonHttpMessageConverter"/>
        </mvc:message-converters>
    </mvc:annotation-driven>
    <mvc:resources location="/js/" mapping="/js/**" cache-period="2592000"/>
    <mvc:resources location="/css/" mapping="/css/**" cache-period="2592000"/>

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/pages/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    <bean class="com.gs.spider.gather.commons.CommonSpider" name="commonSpider">
        <constructor-arg name="staticValue" ref="staticValue"/>
        <constructor-arg name="taskManager" ref="taskManager"/>
        <property name="commonWebpageDAO" ref="commonWebpageDAO"/>
        <property name="spiderInfoDAO" ref="spiderInfoDAO"/>
        <property name="commonWebpagePipeline" ref="commonWebpagePipeline"/>
        <property name="contentLengthLimitHttpClientDownloader" ref="contentLengthLimitHttpClientDownloader"/>
        <property name="keywordsExtractor" ref="HANLPExtractor"/>
        <property name="summaryExtractor" ref="HANLPExtractor"/>
        <property name="namedEntitiesExtractor" ref="HANLPExtractor"/>
        <!--普通网页爬虫数据输出管道配置-->
        <property name="pipelineList">
            <list>
                <!--Redis输出-->
                <!--<ref bean="commonWebpageRedisPipeline"/>-->
                <!-- <ref bean="commonWebpagePipeline"/> -->
                <!-- <ref bean="jsonFilePipeline"/> -->
            </list>
        </property>
    </bean>
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <array>
            </array>
        </property>
        <property name="fileEncoding" value="utf-8"/>
    </bean>
    
    <!-- 自动扫描该包下的所有文件 -->
    <context:component-scan base-package="com.gs.spider.**"/>
    
    
     <!-- 引入配置文件 -->  
    <bean id="propertyConfigurer"  
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
        <property name="location" value="classpath:jdbc.properties" />  
    </bean>  
  
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"  
        destroy-method="close">  
        <property name="driverClassName" value="${driver}" />  
        <property name="url" value="${url}" />  
        <property name="username" value="${username}" />  
        <property name="password" value="${password}" />   
    </bean>  
  
    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <!-- 自动扫描mapping.xml文件,但是由于这里采用注解方式读写数据，故无需此配置-->  
        <!-- <property name="mapperLocations" value="classpath:com/cn/hnust/mapping/*.xml"></property> -->  
    </bean>  
  
    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="com.gs.spider.dao" />  
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>  
    </bean>  
  
    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->  
    <bean id="transactionManager"  
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean>  
    
</beans>